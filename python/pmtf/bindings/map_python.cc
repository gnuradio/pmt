/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/* This file is automatically generated using bindtool */

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

#include <pybind11/operators.h>
namespace py = pybind11;

#include <pmtf/map.hpp>

void bind_map(py::module &m) {
  using map = pmtf::map;

  py::class_<map, std::shared_ptr<map>>(m, "map")

      .def(py::init<>())
      .def(py::init<const std::map<std::string, pmtf::pmt> &>())
      .def(py::init<const pmtf::pmt &>())
      .def("__getitem__",
           [](pmtf::map obj, const std::string &key) { return obj[key]; })
      .def("__setitem__", [](pmtf::map obj, const std::string &key,
                             pmtf::pmt value) { obj[key] = value; })
      .def("keys",
           [](pmtf::map obj) {
             std::vector<std::string> kk;
             for (auto &[k, v] : obj) {
               kk.push_back(k);
             }
             return kk;
           })
      .def("items",
           [](pmtf::map obj) {
             std::vector<std::pair<std::string, pmtf::pmt>> kk;
             for (auto &[k, v] : obj) {
               kk.push_back(std::pair<std::string, pmtf::pmt>(k,v));
             }
             return kk;
           })
      ;
}
